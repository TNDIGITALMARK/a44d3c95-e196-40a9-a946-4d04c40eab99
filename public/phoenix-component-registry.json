{
  "projectId": "a44d3c95-e196-40a9-a946-4d04c40eab99",
  "userId": "hw8u8FgXeBcQGo9CRezTWmEivX92",
  "version": "1.0.0",
  "generatedAt": "2025-09-13T19:22:48.094Z",
  "components": {
    "phoenix-1757791368059": {
      "phoenixId": "phoenix-1757791368059",
      "componentName": "Error",
      "filePath": "src/app/error.tsx",
      "lineNumber": 7,
      "columnNumber": 15,
      "sourceCode": "export default function Error() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold mb-4\">500 - Server Error</h1>\n        <p className=\"text-xl mb-4\">Something went wrong. Please try again later.</p>\n        <Link href=\"/\" className=\"text-blue-500 hover:text-blue-700 underline\">\n          Return to Home\n        </Link>\n      </div>\n    </div>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "moderate"
      }
    },
    "phoenix-1757791368060": {
      "phoenixId": "phoenix-1757791368060",
      "componentName": "FriendsPage",
      "filePath": "src/app/friends/page.tsx",
      "lineNumber": 7,
      "columnNumber": 15,
      "sourceCode": "export default function FriendsPage() {\n  const [activeTab, setActiveTab] = useState('suggestions')\n  const [searchQuery, setSearchQuery] = useState('')\n  \n  const [friends, setFriends] = useState([\n    { id: 1, name: 'Sarah Chen', avatar: '👩‍💻', mutualFriends: 12, isConnected: true, status: 'online' },\n    { id: 2, name: 'Mike Johnson', avatar: '👨‍🎨', mutualFriends: 8, isConnected: true, status: 'away' },\n    { id: 3, name: 'Emily Davis', avatar: '👩‍🎓', mutualFriends: 15, isConnected: true, status: 'offline' },\n    { id: 4, name: 'Alex Rivera', avatar: '👨‍💼', mutualFriends: 6, isConnected: true, status: 'online' },\n    { id: 5, name: 'Lisa Garcia', avatar: '👩‍🎨', mutualFriends: 22, isConnected: true, status: 'online' }\n  ])\n\n  const [suggestions, setSuggestions] = useState([\n    { id: 6, name: 'Emma Wilson', avatar: '👩‍🎓', mutualFriends: 12, isConnected: false },\n    { id: 7, name: 'David Kim', avatar: '👨‍🔬', mutualFriends: 8, isConnected: false },\n    { id: 8, name: 'Jessica Brown', avatar: '👩‍⚕️', mutualFriends: 5, isConnected: false },\n    { id: 9, name: 'Ryan Martinez', avatar: '👨‍🎓', mutualFriends: 18, isConnected: false },\n    { id: 10, name: 'Amanda Taylor', avatar: '👩‍💼', mutualFriends: 7, isConnected: false }\n  ])\n\n  const [requests, setRequests] = useState([\n    { id: 11, name: 'Chris Anderson', avatar: '👨‍🎤', mutualFriends: 3, isConnected: false, isRequest: true },\n    { id: 12, name: 'Sophie Turner', avatar: '👩‍🎭', mutualFriends: 9, isConnected: false, isRequest: true }\n  ])\n\n  const handleConnect = (personId) => {\n    setSuggestions(suggestions.map(person =>\n      person.id === personId ? { ...person, isConnected: true } : person\n    ))\n  }\n\n  const handleAcceptRequest = (personId) => {\n    const person = requests.find(p => p.id === personId)\n    if (person) {\n      setFriends([...friends, { ...person, isConnected: true, status: 'online', isRequest: false }])\n      setRequests(requests.filter(p => p.id !== personId))\n    }\n  }\n\n  const handleRejectRequest = (personId) => {\n    setRequests(requests.filter(p => p.id !== personId))\n  }\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'online': return 'bg-green-500'\n      case 'away': return 'bg-yellow-500'\n      case 'offline': return 'bg-gray-400'\n      default: return 'bg-gray-400'\n    }\n  }\n\n  const filteredFriends = friends.filter(friend =>\n    friend.name.toLowerCase().includes(searchQuery.toLowerCase())\n  )\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"sticky top-0 z-50 border-b bg-card/95 backdrop-blur supports-[backdrop-filter]:bg-card/60\">\n        <div className=\"container flex h-16 items-center px-4\">\n          <Link href=\"/\" className=\"flex items-center space-x-4\">\n            <ArrowLeft className=\"h-5 w-5\" />\n            <h1 className=\"text-2xl font-bold text-primary\">Friends</h1>\n          </Link>\n        </div>\n      </header>\n\n      <div className=\"container max-w-4xl mx-auto py-6 px-4\">\n        {/* Search Bar */}\n        <div className=\"relative mb-6\">\n          <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\n          <input\n            type=\"search\"\n            placeholder=\"Search friends...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"w-full pl-10 pr-4 py-3 bg-card border rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-primary\"\n          />\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\n          <div className=\"bg-card rounded-lg border p-4 text-center\">\n            <div className=\"text-2xl font-bold text-primary\">{friends.length}</div>\n            <div className=\"text-sm text-muted-foreground\">Friends</div>\n          </div>\n          <div className=\"bg-card rounded-lg border p-4 text-center\">\n            <div className=\"text-2xl font-bold text-blue-500\">{requests.length}</div>\n            <div className=\"text-sm text-muted-foreground\">Friend Requests</div>\n          </div>\n          <div className=\"bg-card rounded-lg border p-4 text-center\">\n            <div className=\"text-2xl font-bold text-green-500\">{suggestions.length}</div>\n            <div className=\"text-sm text-muted-foreground\">Suggestions</div>\n          </div>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"border-b mb-6\">\n          <nav className=\"flex space-x-8\">\n            {[\n              { id: 'friends', label: 'All Friends', count: friends.length },\n              { id: 'requests', label: 'Requests', count: requests.length },\n              { id: 'suggestions', label: 'Suggestions', count: suggestions.length }\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors flex items-center space-x-2 ${\n                  activeTab === tab.id\n                    ? 'border-primary text-primary'\n                    : 'border-transparent text-muted-foreground hover:text-foreground'\n                }`}\n              >\n                <span>{tab.label}</span>\n                {tab.count > 0 && (\n                  <span className=\"bg-primary text-primary-foreground text-xs px-2 py-0.5 rounded-full\">\n                    {tab.count}\n                  </span>\n                )}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        {/* Content */}\n        <div className=\"space-y-4\">\n          {activeTab === 'friends' && (\n            <>\n              {filteredFriends.length === 0 ? (\n                <div className=\"text-center py-12\">\n                  <Users className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\n                  <p className=\"text-muted-foreground\">\n                    {searchQuery ? 'No friends found matching your search.' : 'No friends yet. Start connecting!'}\n                  </p>\n                </div>\n              ) : (\n                filteredFriends.map((friend) => (\n                  <div key={friend.id} className=\"bg-card rounded-lg border p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"relative\">\n                          <div className=\"text-2xl\">{friend.avatar}</div>\n                          <div className={`absolute -bottom-0.5 -right-0.5 w-3 h-3 rounded-full border-2 border-background ${getStatusColor(friend.status)}`}></div>\n                        </div>\n                        <div>\n                          <h3 className=\"font-semibold\">{friend.name}</h3>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {friend.mutualFriends} mutual friends • {friend.status}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex space-x-2\">\n                        <button className=\"p-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors\">\n                          <MessageCircle className=\"h-4 w-4\" />\n                        </button>\n                        <button className=\"p-2 bg-muted text-muted-foreground rounded-lg hover:bg-muted/80 transition-colors\">\n                          <MoreHorizontal className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </>\n          )}\n\n          {activeTab === 'requests' && (\n            <>\n              {requests.length === 0 ? (\n                <div className=\"text-center py-12\">\n                  <UserPlus className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\n                  <p className=\"text-muted-foreground\">No friend requests at the moment.</p>\n                </div>\n              ) : (\n                requests.map((request) => (\n                  <div key={request.id} className=\"bg-card rounded-lg border p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"text-2xl\">{request.avatar}</div>\n                        <div>\n                          <h3 className=\"font-semibold\">{request.name}</h3>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {request.mutualFriends} mutual friends\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex space-x-2\">\n                        <button\n                          onClick={() => handleAcceptRequest(request.id)}\n                          className=\"px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors text-sm\"\n                        >\n                          Accept\n                        </button>\n                        <button\n                          onClick={() => handleRejectRequest(request.id)}\n                          className=\"px-4 py-2 bg-muted text-muted-foreground rounded-lg hover:bg-muted/80 transition-colors text-sm\"\n                        >\n                          Decline\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </>\n          )}\n\n          {activeTab === 'suggestions' && (\n            <>\n              {suggestions.length === 0 ? (\n                <div className=\"text-center py-12\">\n                  <UserPlus className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\n                  <p className=\"text-muted-foreground\">No friend suggestions available.</p>\n                </div>\n              ) : (\n                suggestions.map((suggestion) => (\n                  <div key={suggestion.id} className=\"bg-card rounded-lg border p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"text-2xl\">{suggestion.avatar}</div>\n                        <div>\n                          <h3 className=\"font-semibold\">{suggestion.name}</h3>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {suggestion.mutualFriends} mutual friends\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex space-x-2\">\n                        <button\n                          onClick={() => handleConnect(suggestion.id)}\n                          className={`px-4 py-2 rounded-lg transition-colors text-sm flex items-center space-x-2 ${\n                            suggestion.isConnected\n                              ? 'bg-muted text-muted-foreground'\n                              : 'bg-primary text-primary-foreground hover:bg-primary/90'\n                          }`}\n                          disabled={suggestion.isConnected}\n                        >\n                          {suggestion.isConnected ? (\n                            <>\n                              <UserCheck className=\"h-4 w-4\" />\n                              <span>Connected</span>\n                            </>\n                          ) : (\n                            <>\n                              <UserPlus className=\"h-4 w-4\" />\n                              <span>Connect</span>\n                            </>\n                          )}\n                        </button>\n                        <button className=\"px-4 py-2 bg-muted text-muted-foreground rounded-lg hover:bg-muted/80 transition-colors text-sm\">\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState",
          "useState",
          "useState",
          "useState",
          "useState"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1757791368061": {
      "phoenixId": "phoenix-1757791368061",
      "componentName": "GlobalError",
      "filePath": "src/app/global-error.tsx",
      "lineNumber": 5,
      "columnNumber": 15,
      "sourceCode": "export default function GlobalError({\n  error,\n  reset,\n}: {\n  error: Error & { digest?: string }\n  reset: () => void\n}) {\n  return (\n    <html>\n      <body>\n        <div style={{\n          minHeight: '100vh',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: '2rem',\n          fontFamily: 'system-ui, sans-serif'\n        }}>\n          <div style={{ textAlign: 'center', maxWidth: '500px' }}>\n            <h1 style={{ fontSize: '2rem', marginBottom: '1rem', color: '#dc2626' }}>\n              Something went wrong!\n            </h1>\n            <p style={{ fontSize: '1.1rem', marginBottom: '2rem', color: '#6b7280' }}>\n              The application encountered an unexpected error. This is likely temporary.\n            </p>\n            <div style={{ display: 'flex', gap: '1rem', justifyContent: 'center', flexWrap: 'wrap' }}>\n              <button\n                onClick={reset}\n                style={{\n                  padding: '0.75rem 1.5rem',\n                  backgroundColor: '#3b82f6',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '0.5rem',\n                  cursor: 'pointer',\n                  fontSize: '1rem'\n                }}\n              >\n                Try Again\n              </button>\n              <button\n                onClick={() => window.location.href = '/'}\n                style={{\n                  padding: '0.75rem 1.5rem',\n                  backgroundColor: '#6b7280',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '0.5rem',\n                  cursor: 'pointer',\n                  fontSize: '1rem'\n                }}\n              >\n                Go Home\n              </button>\n            </div>\n            {process.env.NODE_ENV === 'development' && (\n              <details style={{ marginTop: '2rem', textAlign: 'left' }}>\n                <summary style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n                  Error Details (Development Only)\n                </summary>\n                <pre style={{ \n                  marginTop: '1rem', \n                  padding: '1rem', \n                  backgroundColor: '#f3f4f6', \n                  borderRadius: '0.5rem',\n                  fontSize: '0.875rem',\n                  overflow: 'auto'\n                }}>\n                  {error.message}\n                  {error.stack && '\\n\\nStack trace:\\n' + error.stack}\n                </pre>\n              </details>\n            )}\n          </div>\n        </div>\n      </body>\n    </html>\n  )\n}",
      "props": [
        {
          "name": "error",
          "type": "unknown",
          "required": false
        },
        {
          "name": "reset",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "complex"
      }
    },
    "phoenix-1757791368062": {
      "phoenixId": "phoenix-1757791368062",
      "componentName": "RootLayout",
      "filePath": "src/app/layout.tsx",
      "lineNumber": 25,
      "columnNumber": 15,
      "sourceCode": "export default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <script src=\"/phoenix-tracking.js\" async></script>\n\n        <QueryProvider>\n          <ThemeProvider\n            attribute=\"class\"\n            defaultTheme=\"system\"\n            enableSystem\n            disableTransitionOnChange\n          >\n            <TooltipProvider>\n              {children}\n              <Toaster />\n              <Sonner />\n            </TooltipProvider>\n          </ThemeProvider>\n        </QueryProvider>\n      </body>\n    </html>\n  );\n}",
      "props": [
        {
          "name": "children",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "complex"
      }
    },
    "phoenix-1757791368063": {
      "phoenixId": "phoenix-1757791368063",
      "componentName": "Loading",
      "filePath": "src/app/loading.tsx",
      "lineNumber": 1,
      "columnNumber": 15,
      "sourceCode": "export default function Loading() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-center\">\n        <p className=\"text-xl\">Loading...</p>\n      </div>\n    </div>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "moderate"
      }
    },
    "phoenix-1757791368064": {
      "phoenixId": "phoenix-1757791368064",
      "componentName": "LoginPage",
      "filePath": "src/app/login/page.tsx",
      "lineNumber": 7,
      "columnNumber": 15,
      "sourceCode": "export default function LoginPage() {\n  const [isLogin, setIsLogin] = useState(true)\n  const [showPassword, setShowPassword] = useState(false)\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    name: '',\n    confirmPassword: ''\n  })\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // In a real app, this would handle authentication\n    console.log('Form submitted:', formData)\n    // For demo purposes, redirect to home\n    window.location.href = '/'\n  }\n\n  const handleInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background flex\">\n      {/* Left Side - Branding */}\n      <div className=\"hidden lg:flex lg:flex-1 bg-gradient-to-br from-primary/10 via-purple-50 to-pink-50 dark:from-primary/5 dark:via-purple-950/20 dark:to-pink-950/20 items-center justify-center p-12\">\n        <div className=\"max-w-lg text-center\">\n          <h1 className=\"text-6xl font-bold text-primary mb-6\">Ronim</h1>\n          <p className=\"text-xl text-muted-foreground mb-8\">\n            Connect with friends and the world around you on Ronim.\n          </p>\n          \n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-center space-x-4\">\n              <div className=\"flex items-center space-x-2 bg-background/50 backdrop-blur rounded-full px-4 py-2\">\n                <Users className=\"h-5 w-5 text-primary\" />\n                <span className=\"text-sm\">2.5M Users</span>\n              </div>\n              <div className=\"flex items-center space-x-2 bg-background/50 backdrop-blur rounded-full px-4 py-2\">\n                <Heart className=\"h-5 w-5 text-red-500\" />\n                <span className=\"text-sm\">10M Likes</span>\n              </div>\n              <div className=\"flex items-center space-x-2 bg-background/50 backdrop-blur rounded-full px-4 py-2\">\n                <MessageCircle className=\"h-5 w-5 text-blue-500\" />\n                <span className=\"text-sm\">5M Comments</span>\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-3 gap-4\">\n              {['😊', '🌟', '📸', '🎉', '💬', '❤️'].map((emoji, index) => (\n                <div \n                  key={index} \n                  className=\"aspect-square bg-background/30 backdrop-blur rounded-lg flex items-center justify-center text-2xl hover:scale-105 transition-transform\"\n                >\n                  {emoji}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Right Side - Form */}\n      <div className=\"flex-1 flex items-center justify-center p-8\">\n        <div className=\"w-full max-w-md\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"text-3xl font-bold\">\n              {isLogin ? 'Welcome Back!' : 'Join Ronim Today'}\n            </h2>\n            <p className=\"text-muted-foreground mt-2\">\n              {isLogin \n                ? 'Sign in to your account to continue' \n                : 'Create your account and start connecting'\n              }\n            </p>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            {!isLogin && (\n              <div>\n                <label htmlFor=\"name\" className=\"block text-sm font-medium mb-2\">\n                  Full Name\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  required={!isLogin}\n                  className=\"w-full px-4 py-3 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary transition-colors\"\n                  placeholder=\"Enter your full name\"\n                />\n              </div>\n            )}\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium mb-2\">\n                Email Address\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                required\n                className=\"w-full px-4 py-3 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary transition-colors\"\n                placeholder=\"Enter your email\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium mb-2\">\n                Password\n              </label>\n              <div className=\"relative\">\n                <input\n                  type={showPassword ? 'text' : 'password'}\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  required\n                  className=\"w-full px-4 py-3 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary transition-colors pr-12\"\n                  placeholder=\"Enter your password\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground hover:text-foreground\"\n                >\n                  {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                </button>\n              </div>\n            </div>\n\n            {!isLogin && (\n              <div>\n                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium mb-2\">\n                  Confirm Password\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  required={!isLogin}\n                  className=\"w-full px-4 py-3 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary transition-colors\"\n                  placeholder=\"Confirm your password\"\n                />\n              </div>\n            )}\n\n            <button\n              type=\"submit\"\n              className=\"w-full py-3 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors font-medium\"\n            >\n              {isLogin ? 'Sign In' : 'Create Account'}\n            </button>\n          </form>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t\"></div>\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-background text-muted-foreground\">\n                  Or continue with\n                </span>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-3 mt-4\">\n              <button className=\"flex items-center justify-center px-4 py-3 bg-muted hover:bg-muted/80 rounded-lg transition-colors\">\n                <span className=\"text-lg mr-2\">🔍</span>\n                Google\n              </button>\n              <button className=\"flex items-center justify-center px-4 py-3 bg-muted hover:bg-muted/80 rounded-lg transition-colors\">\n                <span className=\"text-lg mr-2\">📘</span>\n                Facebook\n              </button>\n            </div>\n          </div>\n\n          <div className=\"text-center mt-8\">\n            <button\n              type=\"button\"\n              onClick={() => setIsLogin(!isLogin)}\n              className=\"text-sm text-muted-foreground hover:text-primary transition-colors\"\n            >\n              {isLogin \n                ? \"Don't have an account? Sign up\" \n                : \"Already have an account? Sign in\"\n              }\n            </button>\n          </div>\n\n          <div className=\"text-center mt-4\">\n            <Link \n              href=\"/\" \n              className=\"text-sm text-primary hover:underline\"\n            >\n              Continue as Guest\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState",
          "useState",
          "useState"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1757791368065": {
      "phoenixId": "phoenix-1757791368065",
      "componentName": "Messages",
      "filePath": "src/app/messages/page.tsx",
      "lineNumber": 8,
      "columnNumber": 15,
      "sourceCode": "export default function Messages() {\n  const [conversations] = useState([\n    {\n      id: 1,\n      name: 'Sarah Chen',\n      avatar: '👩‍💻',\n      lastMessage: 'Thanks for sharing your portfolio! It looks amazing.',\n      time: '2m ago',\n      unread: 2,\n      online: true\n    },\n    {\n      id: 2,\n      name: 'Mike Johnson',\n      avatar: '👨‍🎨',\n      lastMessage: 'The hiking photos are incredible! Where was this taken?',\n      time: '15m ago',\n      unread: 0,\n      online: false\n    },\n    {\n      id: 3,\n      name: 'Alex Rivera',\n      avatar: '👨‍💼',\n      lastMessage: 'Great job on the project presentation today!',\n      time: '1h ago',\n      unread: 1,\n      online: true\n    },\n    {\n      id: 4,\n      name: 'Emma Wilson',\n      avatar: '👩‍🎓',\n      lastMessage: 'Hey! Would love to catch up soon',\n      time: '2h ago',\n      unread: 0,\n      online: false\n    },\n    {\n      id: 5,\n      name: 'David Kim',\n      avatar: '👨‍🔬',\n      lastMessage: 'The research findings are fascinating!',\n      time: '1d ago',\n      unread: 0,\n      online: true\n    }\n  ])\n\n  const [selectedChat, setSelectedChat] = useState(conversations[0])\n  const [newMessage, setNewMessage] = useState('')\n  const [messages, setMessages] = useState([\n    {\n      id: 1,\n      sender: 'Sarah Chen',\n      content: 'Hey! How are you doing?',\n      time: '10:30 AM',\n      isOwn: false\n    },\n    {\n      id: 2,\n      sender: 'You',\n      content: 'I\\'m doing great! Just finished working on my portfolio.',\n      time: '10:32 AM',\n      isOwn: true\n    },\n    {\n      id: 3,\n      sender: 'Sarah Chen',\n      content: 'That\\'s awesome! I\\'d love to take a look at it.',\n      time: '10:33 AM',\n      isOwn: false\n    },\n    {\n      id: 4,\n      sender: 'You',\n      content: 'Sure! Here\\'s the link: www.myportfolio.com',\n      time: '10:35 AM',\n      isOwn: true\n    },\n    {\n      id: 5,\n      sender: 'Sarah Chen',\n      content: 'Thanks for sharing your portfolio! It looks amazing.',\n      time: '10:36 AM',\n      isOwn: false\n    }\n  ])\n\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      const message = {\n        id: messages.length + 1,\n        sender: 'You',\n        content: newMessage,\n        time: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n        isOwn: true\n      }\n      setMessages([...messages, message])\n      setNewMessage('')\n    }\n  }\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      handleSendMessage()\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"sticky top-0 z-50 border-b bg-card/95 backdrop-blur supports-[backdrop-filter]:bg-card/60\">\n        <div className=\"container flex h-16 items-center px-4\">\n          <div className=\"flex items-center space-x-4\">\n            <Link href=\"/\">\n              <ArrowLeft className=\"h-6 w-6 text-muted-foreground hover:text-primary cursor-pointer\" />\n            </Link>\n            <div className=\"flex items-center space-x-2\">\n              <Image src=\"/generated/ronim-logo.png\" alt=\"Ronim Logo\" width={120} height={40} className=\"h-8 w-auto\" />\n            </div>\n          </div>\n          <div className=\"flex-1 text-center\">\n            <h1 className=\"text-xl font-semibold\">Messages</h1>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"container max-w-6xl mx-auto h-[calc(100vh-4rem)]\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 h-full border-x\">\n          {/* Conversations List */}\n          <div className=\"border-r bg-card/50\">\n            {/* Search */}\n            <div className=\"p-4 border-b\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\n                <input\n                  type=\"search\"\n                  placeholder=\"Search conversations...\"\n                  className=\"w-full pl-10 pr-4 py-2 bg-muted rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-primary\"\n                />\n              </div>\n            </div>\n\n            {/* Conversation List */}\n            <div className=\"overflow-y-auto\">\n              {conversations.map((conversation) => (\n                <div\n                  key={conversation.id}\n                  onClick={() => setSelectedChat(conversation)}\n                  className={`flex items-center space-x-3 p-4 hover:bg-muted/50 cursor-pointer border-b ${\n                    selectedChat.id === conversation.id ? 'bg-muted' : ''\n                  }`}\n                >\n                  <div className=\"relative\">\n                    <div className=\"text-2xl\">{conversation.avatar}</div>\n                    {conversation.online && (\n                      <div className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-green-500 rounded-full border-2 border-background\"></div>\n                    )}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center justify-between\">\n                      <h3 className=\"font-medium truncate\">{conversation.name}</h3>\n                      <span className=\"text-xs text-muted-foreground\">{conversation.time}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <p className=\"text-sm text-muted-foreground truncate\">{conversation.lastMessage}</p>\n                      {conversation.unread > 0 && (\n                        <div className=\"ml-2 bg-primary text-primary-foreground text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                          {conversation.unread}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Chat Window */}\n          <div className=\"lg:col-span-2 flex flex-col\">\n            {/* Chat Header */}\n            <div className=\"flex items-center justify-between p-4 border-b bg-card/50\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"relative\">\n                  <div className=\"text-2xl\">{selectedChat.avatar}</div>\n                  {selectedChat.online && (\n                    <div className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-green-500 rounded-full border-2 border-background\"></div>\n                  )}\n                </div>\n                <div>\n                  <h2 className=\"font-semibold\">{selectedChat.name}</h2>\n                  <p className=\"text-sm text-muted-foreground\">\n                    {selectedChat.online ? 'Online' : 'Last seen 2h ago'}\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Phone className=\"h-5 w-5 text-muted-foreground hover:text-primary cursor-pointer\" />\n                <Video className=\"h-5 w-5 text-muted-foreground hover:text-primary cursor-pointer\" />\n                <MoreHorizontal className=\"h-5 w-5 text-muted-foreground hover:text-primary cursor-pointer\" />\n              </div>\n            </div>\n\n            {/* Messages */}\n            <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n              {messages.map((message) => (\n                <div\n                  key={message.id}\n                  className={`flex ${message.isOwn ? 'justify-end' : 'justify-start'}`}\n                >\n                  <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-2xl ${\n                    message.isOwn\n                      ? 'bg-primary text-primary-foreground'\n                      : 'bg-muted text-foreground'\n                  }`}>\n                    <p className=\"text-sm\">{message.content}</p>\n                    <p className={`text-xs mt-1 ${\n                      message.isOwn ? 'text-primary-foreground/70' : 'text-muted-foreground'\n                    }`}>\n                      {message.time}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Message Input */}\n            <div className=\"p-4 border-t bg-card/50\">\n              <div className=\"flex items-end space-x-2\">\n                <div className=\"flex items-center space-x-2\">\n                  <Paperclip className=\"h-5 w-5 text-muted-foreground hover:text-primary cursor-pointer\" />\n                  <ImageIcon className=\"h-5 w-5 text-muted-foreground hover:text-primary cursor-pointer\" />\n                </div>\n                <div className=\"flex-1 relative\">\n                  <textarea\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    onKeyDown={handleKeyPress}\n                    placeholder=\"Type a message...\"\n                    className=\"w-full px-4 py-2 pr-12 bg-muted rounded-full resize-none focus:outline-none focus:ring-2 focus:ring-primary text-sm\"\n                    rows={1}\n                    style={{ minHeight: '40px', maxHeight: '120px' }}\n                  />\n                  <Smile className=\"absolute right-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground hover:text-primary cursor-pointer\" />\n                </div>\n                <button\n                  onClick={handleSendMessage}\n                  className=\"p-2 bg-primary text-primary-foreground rounded-full hover:bg-primary/90 transition-colors\"\n                >\n                  <Send className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState",
          "useState",
          "useState",
          "useState"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1757791368066": {
      "phoenixId": "phoenix-1757791368066",
      "componentName": "NotFound",
      "filePath": "src/app/not-found.tsx",
      "lineNumber": 5,
      "columnNumber": 15,
      "sourceCode": "export default function NotFound() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold mb-4\">404 - Page Not Found</h1>\n        <p className=\"text-xl mb-4\">The page you are looking for does not exist.</p>\n        <Link href=\"/\" className=\"text-blue-500 hover:text-blue-700 underline\">\n          Return to Home\n        </Link>\n      </div>\n    </div>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "moderate"
      }
    },
    "phoenix-1757791368067": {
      "phoenixId": "phoenix-1757791368067",
      "componentName": "Notifications",
      "filePath": "src/app/notifications/page.tsx",
      "lineNumber": 8,
      "columnNumber": 15,
      "sourceCode": "export default function Notifications() {\n  const [activeTab, setActiveTab] = useState('all')\n  const [notifications, setNotifications] = useState([\n    {\n      id: 1,\n      type: 'like',\n      user: 'Sarah Chen',\n      avatar: '👩‍💻',\n      action: 'liked your post',\n      target: 'Just launched my new portfolio website!',\n      time: '5m ago',\n      read: false\n    },\n    {\n      id: 2,\n      type: 'comment',\n      user: 'Mike Johnson',\n      avatar: '👨‍🎨',\n      action: 'commented on your post',\n      target: 'Beautiful sunset from my hiking trip',\n      comment: 'Amazing shot! Where was this taken?',\n      time: '15m ago',\n      read: false\n    },\n    {\n      id: 3,\n      type: 'friend_request',\n      user: 'Emma Wilson',\n      avatar: '👩‍🎓',\n      action: 'sent you a friend request',\n      time: '1h ago',\n      read: false\n    },\n    {\n      id: 4,\n      type: 'share',\n      user: 'Alex Rivera',\n      avatar: '👨‍💼',\n      action: 'shared your post',\n      target: 'Team meeting went great today!',\n      time: '2h ago',\n      read: true\n    },\n    {\n      id: 5,\n      type: 'like',\n      user: 'David Kim',\n      avatar: '👨‍🔬',\n      action: 'and 12 others liked your post',\n      target: 'The research findings are fascinating!',\n      time: '3h ago',\n      read: true\n    },\n    {\n      id: 6,\n      type: 'comment',\n      user: 'Lisa Garcia',\n      avatar: '👩‍🎨',\n      action: 'replied to your comment',\n      target: 'What do you think about the new design?',\n      comment: 'I love the color scheme!',\n      time: '1d ago',\n      read: true\n    },\n    {\n      id: 7,\n      type: 'friend_accept',\n      user: 'Tom Wilson',\n      avatar: '👨‍🎓',\n      action: 'accepted your friend request',\n      time: '2d ago',\n      read: true\n    }\n  ])\n\n  const getNotificationIcon = (type) => {\n    switch (type) {\n      case 'like':\n        return <Heart className=\"h-4 w-4 text-red-500\" />\n      case 'comment':\n        return <MessageCircle className=\"h-4 w-4 text-blue-500\" />\n      case 'friend_request':\n      case 'friend_accept':\n        return <UserPlus className=\"h-4 w-4 text-green-500\" />\n      case 'share':\n        return <Share2 className=\"h-4 w-4 text-purple-500\" />\n      default:\n        return <Users className=\"h-4 w-4 text-gray-500\" />\n    }\n  }\n\n  const filteredNotifications = notifications.filter(notification => {\n    if (activeTab === 'unread') return !notification.read\n    if (activeTab === 'mentions') return notification.type === 'comment'\n    return true // all\n  })\n\n  const handleMarkAsRead = (id) => {\n    setNotifications(notifications.map(notification => \n      notification.id === id ? { ...notification, read: true } : notification\n    ))\n  }\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(notifications.map(notification => ({ ...notification, read: true })))\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"sticky top-0 z-50 border-b bg-card/95 backdrop-blur supports-[backdrop-filter]:bg-card/60\">\n        <div className=\"container flex h-16 items-center px-4\">\n          <div className=\"flex items-center space-x-4\">\n            <Link href=\"/\">\n              <ArrowLeft className=\"h-6 w-6 text-muted-foreground hover:text-primary cursor-pointer\" />\n            </Link>\n            <div className=\"flex items-center space-x-2\">\n              <Image src=\"/generated/ronim-logo.png\" alt=\"Ronim Logo\" width={120} height={40} className=\"h-8 w-auto\" />\n            </div>\n          </div>\n          <div className=\"flex-1 text-center\">\n            <h1 className=\"text-xl font-semibold\">Notifications</h1>\n          </div>\n          <button\n            onClick={handleMarkAllAsRead}\n            className=\"text-sm text-primary hover:underline\"\n          >\n            Mark all read\n          </button>\n        </div>\n      </header>\n\n      <div className=\"container max-w-2xl mx-auto py-6 px-4\">\n        {/* Tabs */}\n        <div className=\"flex space-x-4 mb-6 border-b\">\n          {[\n            { id: 'all', label: 'All', count: notifications.length },\n            { id: 'unread', label: 'Unread', count: notifications.filter(n => !n.read).length },\n            { id: 'mentions', label: 'Mentions', count: notifications.filter(n => n.type === 'comment').length }\n          ].map((tab) => (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`pb-4 px-1 border-b-2 transition-colors ${\n                activeTab === tab.id\n                  ? 'border-primary text-primary'\n                  : 'border-transparent text-muted-foreground hover:text-foreground'\n              }`}\n            >\n              <span className=\"font-medium\">{tab.label}</span>\n              {tab.count > 0 && (\n                <span className=\"ml-2 bg-primary text-primary-foreground text-xs rounded-full h-5 w-5 inline-flex items-center justify-center\">\n                  {tab.count}\n                </span>\n              )}\n            </button>\n          ))}\n        </div>\n\n        {/* Notifications List */}\n        <div className=\"space-y-1\">\n          {filteredNotifications.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <div className=\"text-6xl mb-4\">🔕</div>\n              <h3 className=\"text-lg font-semibold mb-2\">No notifications</h3>\n              <p className=\"text-muted-foreground\">\n                {activeTab === 'unread' \n                  ? \"You're all caught up! No unread notifications.\"\n                  : \"You don't have any notifications yet.\"\n                }\n              </p>\n            </div>\n          ) : (\n            filteredNotifications.map((notification) => (\n              <div\n                key={notification.id}\n                className={`flex items-start space-x-3 p-4 hover:bg-muted/50 rounded-lg cursor-pointer ${\n                  !notification.read ? 'bg-muted/20' : ''\n                }`}\n                onClick={() => !notification.read && handleMarkAsRead(notification.id)}\n              >\n                <div className=\"text-2xl\">{notification.avatar}</div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center space-x-2 mb-1\">\n                        {getNotificationIcon(notification.type)}\n                        <p className=\"text-sm\">\n                          <span className=\"font-medium\">{notification.user}</span>\n                          {' '}\n                          <span className=\"text-muted-foreground\">{notification.action}</span>\n                          {notification.target && (\n                            <span className=\"text-foreground\">\n                              {' '}\"\n                              {notification.target.length > 30 \n                                ? notification.target.substring(0, 30) + '...'\n                                : notification.target\n                              }\"\n                            </span>\n                          )}\n                        </p>\n                      </div>\n                      {notification.comment && (\n                        <p className=\"text-sm text-muted-foreground bg-muted/30 rounded p-2 mt-2\">\n                          \"{notification.comment}\"\n                        </p>\n                      )}\n                      <div className=\"flex items-center justify-between mt-1\">\n                        <span className=\"text-xs text-muted-foreground\">{notification.time}</span>\n                        {!notification.read && (\n                          <div className=\"w-2 h-2 bg-primary rounded-full\"></div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-2 ml-2\">\n                      {notification.type === 'friend_request' && !notification.read && (\n                        <>\n                          <button className=\"text-xs px-3 py-1 bg-primary text-primary-foreground rounded hover:bg-primary/90\">\n                            Accept\n                          </button>\n                          <button className=\"text-xs px-3 py-1 bg-muted text-muted-foreground rounded hover:bg-muted/80\">\n                            Decline\n                          </button>\n                        </>\n                      )}\n                      <MoreHorizontal className=\"h-4 w-4 text-muted-foreground hover:text-foreground\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n\n        {/* Load More */}\n        {filteredNotifications.length > 0 && (\n          <div className=\"text-center mt-8\">\n            <button className=\"text-sm text-primary hover:underline\">\n              Load more notifications\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState",
          "useState"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1757791368068": {
      "phoenixId": "phoenix-1757791368068",
      "componentName": "Ronim",
      "filePath": "src/app/page.tsx",
      "lineNumber": 10,
      "columnNumber": 15,
      "sourceCode": "export default function Ronim() {\n  const [posts, setPosts] = useState([\n    {\n      id: 1,\n      author: 'Sarah Chen',\n      avatar: '👩‍💻',\n      time: '2h ago',\n      content: 'Just launched my new portfolio website! So excited to share my work with the world. 🚀',\n      likes: 24,\n      comments: 8,\n      image: null,\n      liked: false,\n      userComments: []\n    },\n    {\n      id: 2,\n      author: 'Mike Johnson',\n      avatar: '👨‍🎨',\n      time: '4h ago',\n      content: 'Beautiful sunset from my hiking trip this weekend. Nature never ceases to amaze me! 🌅',\n      likes: 156,\n      comments: 23,\n      image: '🌅',\n      liked: false,\n      userComments: []\n    },\n    {\n      id: 3,\n      author: 'Alex Rivera',\n      avatar: '👨‍💼',\n      time: '6h ago',\n      content: 'Team meeting went great today! We are making amazing progress on our new project. Collaboration is key! 💼',\n      likes: 42,\n      comments: 12,\n      image: null,\n      liked: false,\n      userComments: []\n    }\n  ])\n\n  const [newPost, setNewPost] = useState('')\n  const [postImage, setPostImage] = useState(null)\n  const [commentInputs, setCommentInputs] = useState({})\n  const [showComments, setShowComments] = useState({})\n  \n  const handlePostSubmit = () => {\n    if (newPost.trim() || postImage) {\n      const post = {\n        id: posts.length + 1,\n        author: 'You',\n        avatar: '😊',\n        time: 'now',\n        content: newPost,\n        likes: 0,\n        comments: 0,\n        image: postImage,\n        liked: false,\n        userComments: []\n      }\n      setPosts([post, ...posts])\n      setNewPost('')\n      setPostImage(null)\n    }\n  }\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0]\n    if (file) {\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        setPostImage(e.target.result)\n      }\n      reader.readAsDataURL(file)\n    }\n  }\n\n  const removeImage = () => {\n    setPostImage(null)\n  }\n\n  const handleLike = (postId) => {\n    setPosts(posts.map(post => {\n      if (post.id === postId) {\n        return {\n          ...post,\n          liked: !post.liked,\n          likes: post.liked ? post.likes - 1 : post.likes + 1\n        }\n      }\n      return post\n    }))\n  }\n\n  const handleComment = (postId) => {\n    const commentText = commentInputs[postId]\n    if (commentText && commentText.trim()) {\n      setPosts(posts.map(post => {\n        if (post.id === postId) {\n          const newComment = {\n            id: post.userComments.length + 1,\n            text: commentText,\n            author: 'You',\n            avatar: '😊',\n            time: 'now'\n          }\n          return {\n            ...post,\n            userComments: [...post.userComments, newComment],\n            comments: post.comments + 1\n          }\n        }\n        return post\n      }))\n      setCommentInputs({...commentInputs, [postId]: ''})\n    }\n  }\n\n  const toggleComments = (postId) => {\n    setShowComments({...showComments, [postId]: !showComments[postId]})\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"sticky top-0 z-50 border-b bg-card/95 backdrop-blur supports-[backdrop-filter]:bg-card/60\">\n        <div className=\"container flex h-16 items-center px-4\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Image src=\"/generated/ronim-logo.png\" alt=\"Ronim Logo\" width={120} height={40} className=\"h-8 w-auto\" />\n            </div>\n            <Link href=\"/search\" className=\"relative flex-1 max-w-sm\">\n              <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground pointer-events-none z-10\" />\n              <div className=\"w-full pl-10 pr-4 py-2 bg-muted rounded-full text-sm text-muted-foreground cursor-pointer hover:bg-muted/80 transition-colors\">\n                Search Ronim...\n              </div>\n            </Link>\n          </div>\n          <nav className=\"flex items-center space-x-6\">\n            <Home className=\"h-6 w-6 text-primary\" />\n            <Link href=\"/friends\">\n              <Users className=\"h-6 w-6 text-muted-foreground hover:text-primary cursor-pointer\" />\n            </Link>\n            <Link href=\"/notifications\">\n              <Bell className=\"h-6 w-6 text-muted-foreground hover:text-primary cursor-pointer\" />\n            </Link>\n            <Link href=\"/messages\">\n              <Mail className=\"h-6 w-6 text-muted-foreground hover:text-primary cursor-pointer\" />\n            </Link>\n            <Link href=\"/profile\">\n              <User className=\"h-6 w-6 text-muted-foreground hover:text-primary cursor-pointer\" />\n            </Link>\n            <Link \n              href=\"/login\"\n              className=\"px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors text-sm\"\n            >\n              Login\n            </Link>\n          </nav>\n        </div>\n      </header>\n\n      <div className=\"container max-w-4xl mx-auto py-6 px-4\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Main Feed */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Create Post */}\n            <div className=\"bg-card rounded-lg border p-4\">\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"text-2xl\">😊</div>\n                <div className=\"flex-1\">\n                  <textarea\n                    value={newPost}\n                    onChange={(e) => setNewPost(e.target.value)}\n                    placeholder=\"What's on your mind?\"\n                    className=\"w-full p-3 bg-muted rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-primary\"\n                    rows={3}\n                  />\n                  \n                  {/* Image Preview */}\n                  {postImage && (\n                    <div className=\"mt-3 relative\">\n                      <img \n                        src={postImage} \n                        alt=\"Upload preview\" \n                        className=\"max-h-64 w-full object-cover rounded-lg\" \n                      />\n                      <button\n                        onClick={removeImage}\n                        className=\"absolute top-2 right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm hover:bg-red-600\"\n                      >\n                        ✕\n                      </button>\n                    </div>\n                  )}\n                  \n                  <div className=\"flex justify-between items-center mt-3\">\n                    <div className=\"flex space-x-2\">\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={handleImageUpload}\n                        className=\"hidden\"\n                        id=\"image-upload\"\n                      />\n                      <label\n                        htmlFor=\"image-upload\"\n                        className=\"text-muted-foreground hover:text-primary cursor-pointer\"\n                      >\n                        📷\n                      </label>\n                      <button className=\"text-muted-foreground hover:text-primary\">😊</button>\n                      <button className=\"text-muted-foreground hover:text-primary\">📍</button>\n                    </div>\n                    <button\n                      onClick={handlePostSubmit}\n                      className=\"px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors\"\n                    >\n                      Post\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Posts */}\n            {posts.map((post) => (\n              <div key={post.id} className=\"bg-card rounded-lg border\">\n                {/* Post Header */}\n                <div className=\"p-4 flex items-start space-x-3\">\n                  <div className=\"text-2xl\">{post.avatar}</div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-2\">\n                      <h3 className=\"font-semibold\">{post.author}</h3>\n                      <span className=\"text-muted-foreground text-sm\">•</span>\n                      <span className=\"text-muted-foreground text-sm\">{post.time}</span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Post Content */}\n                <div className=\"px-4 pb-3\">\n                  <p className=\"text-foreground\">{post.content}</p>\n                  {post.image && (\n                    <div className=\"mt-3\">\n                      {typeof post.image === 'string' && post.image.startsWith('data:') ? (\n                        <img \n                          src={post.image} \n                          alt=\"Post image\" \n                          className=\"w-full max-h-96 object-cover rounded-lg\" \n                        />\n                      ) : (\n                        <div className=\"text-6xl text-center py-8 bg-muted rounded-lg\">\n                          {post.image}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                {/* Post Actions */}\n                <div className=\"px-4 py-3 border-t flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-6\">\n                    <button \n                      onClick={() => handleLike(post.id)}\n                      className={`flex items-center space-x-2 transition-colors ${\n                        post.liked ? 'text-red-500' : 'text-muted-foreground hover:text-red-500'\n                      }`}\n                    >\n                      <Heart className={`h-5 w-5 ${post.liked ? 'fill-current' : ''}`} />\n                      <span className=\"text-sm\">{post.likes}</span>\n                    </button>\n                    <button \n                      onClick={() => toggleComments(post.id)}\n                      className=\"flex items-center space-x-2 text-muted-foreground hover:text-primary transition-colors\"\n                    >\n                      <MessageCircle className=\"h-5 w-5\" />\n                      <span className=\"text-sm\">{post.comments}</span>\n                    </button>\n                    <button className=\"flex items-center space-x-2 text-muted-foreground hover:text-primary transition-colors\">\n                      <Share2 className=\"h-5 w-5\" />\n                      <span className=\"text-sm\">Share</span>\n                    </button>\n                  </div>\n                </div>\n\n                {/* Comments Section */}\n                {showComments[post.id] && (\n                  <div className=\"px-4 pb-4 border-t bg-muted/20\">\n                    {/* Existing Comments */}\n                    {post.userComments.length > 0 && (\n                      <div className=\"space-y-3 mb-4 pt-4\">\n                        {post.userComments.map((comment) => (\n                          <div key={comment.id} className=\"flex items-start space-x-3\">\n                            <div className=\"text-sm\">{comment.avatar}</div>\n                            <div className=\"flex-1 bg-muted rounded-lg p-3\">\n                              <div className=\"flex items-center space-x-2 mb-1\">\n                                <span className=\"font-medium text-sm\">{comment.author}</span>\n                                <span className=\"text-xs text-muted-foreground\">{comment.time}</span>\n                              </div>\n                              <p className=\"text-sm\">{comment.text}</p>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                    \n                    {/* Add Comment */}\n                    <div className=\"flex items-center space-x-3 pt-4\">\n                      <div className=\"text-sm\">😊</div>\n                      <div className=\"flex-1 flex space-x-2\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Write a comment...\"\n                          value={commentInputs[post.id] || ''}\n                          onChange={(e) => setCommentInputs({...commentInputs, [post.id]: e.target.value})}\n                          onKeyDown={(e) => e.key === 'Enter' && handleComment(post.id)}\n                          className=\"flex-1 px-3 py-2 bg-background rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-primary\"\n                        />\n                        <button \n                          onClick={() => handleComment(post.id)}\n                          className=\"px-4 py-2 bg-primary text-primary-foreground rounded-full text-sm hover:bg-primary/90 transition-colors\"\n                        >\n                          Post\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-4\">\n            {/* User Profile Card */}\n            <div className=\"bg-card rounded-lg border p-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"text-3xl\">😊</div>\n                <div>\n                  <h3 className=\"font-semibold\">Welcome to Ronim!</h3>\n                  <p className=\"text-sm text-muted-foreground\">Connect with friends and share your moments</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Quick Stats */}\n            <div className=\"bg-card rounded-lg border p-4\">\n              <h3 className=\"font-semibold mb-3\">Your Activity</h3>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Posts</span>\n                  <span>12</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Friends</span>\n                  <span>284</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Following</span>\n                  <span>156</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Suggested Friends */}\n            <div className=\"bg-card rounded-lg border p-4\">\n              <h3 className=\"font-semibold mb-3\">People you may know</h3>\n              <div className=\"space-y-3\">\n                {[\n                  { name: 'Emma Wilson', avatar: '👩‍🎓', mutualFriends: 12 },\n                  { name: 'David Kim', avatar: '👨‍🔬', mutualFriends: 8 },\n                  { name: 'Lisa Garcia', avatar: '👩‍🎨', mutualFriends: 15 }\n                ].map((person, index) => (\n                  <div key={index} className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-lg\">{person.avatar}</span>\n                      <div>\n                        <p className=\"text-sm font-medium\">{person.name}</p>\n                        <p className=\"text-xs text-muted-foreground\">{person.mutualFriends} mutual friends</p>\n                      </div>\n                    </div>\n                    <button className=\"text-xs px-3 py-1 bg-primary text-primary-foreground rounded hover:bg-primary/90\">\n                      Add\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState",
          "useState",
          "useState",
          "useState",
          "useState"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1757791368069": {
      "phoenixId": "phoenix-1757791368069",
      "componentName": "ProfilePage",
      "filePath": "src/app/profile/page.tsx",
      "lineNumber": 7,
      "columnNumber": 15,
      "sourceCode": "export default function ProfilePage() {\n  const [isFollowing, setIsFollowing] = useState(false)\n  const [activeTab, setActiveTab] = useState('posts')\n\n  const userPosts = [\n    {\n      id: 1,\n      content: 'Just finished reading an amazing book about web development! Anyone have recommendations for what to read next? 📚',\n      likes: 42,\n      comments: 15,\n      time: '2h ago',\n      image: null\n    },\n    {\n      id: 2,\n      content: 'Weekend hiking trip was incredible! The views from the mountain top were absolutely breathtaking. Nature never fails to inspire me. 🏔️',\n      likes: 89,\n      comments: 23,\n      time: '1d ago',\n      image: '🏔️'\n    },\n    {\n      id: 3,\n      content: 'Working on a new project that I am really excited about. Can not wait to share it with everyone soon! #coding #webdev',\n      likes: 156,\n      comments: 34,\n      time: '3d ago',\n      image: null\n    }\n  ]\n\n  const photos = [\n    '📸', '🌅', '🏔️', '🌊', '🌸', '🎨', '📱', '💻', '🌟'\n  ]\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"sticky top-0 z-50 border-b bg-card/95 backdrop-blur supports-[backdrop-filter]:bg-card/60\">\n        <div className=\"container flex h-16 items-center px-4\">\n          <Link href=\"/\" className=\"flex items-center space-x-4\">\n            <ArrowLeft className=\"h-5 w-5\" />\n            <h1 className=\"text-2xl font-bold text-primary\">Ronim</h1>\n          </Link>\n        </div>\n      </header>\n\n      <div className=\"container max-w-4xl mx-auto\">\n        {/* Cover Photo */}\n        <div className=\"relative h-64 bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500\">\n          <div className=\"absolute inset-0 bg-black/20\"></div>\n          <button className=\"absolute bottom-4 right-4 p-2 bg-black/50 rounded-full text-white hover:bg-black/70 transition-colors\">\n            <Camera className=\"h-5 w-5\" />\n          </button>\n        </div>\n\n        {/* Profile Info */}\n        <div className=\"relative -mt-20 px-4\">\n          <div className=\"flex flex-col md:flex-row items-center md:items-end space-y-4 md:space-y-0 md:space-x-6\">\n            {/* Profile Picture */}\n            <div className=\"relative\">\n              <div className=\"w-32 h-32 bg-card border-4 border-background rounded-full flex items-center justify-center text-4xl\">\n                😊\n              </div>\n              <button className=\"absolute bottom-2 right-2 p-2 bg-primary rounded-full text-primary-foreground hover:bg-primary/90 transition-colors\">\n                <Camera className=\"h-4 w-4\" />\n              </button>\n            </div>\n\n            {/* Profile Details */}\n            <div className=\"flex-1 text-center md:text-left\">\n              <h1 className=\"text-3xl font-bold\">Alex Johnson</h1>\n              <p className=\"text-muted-foreground mt-1\">@alexjohnson</p>\n              <p className=\"mt-3 max-w-md\">\n                Full-stack developer passionate about creating amazing user experiences. \n                Love hiking, photography, and good books! 🚀\n              </p>\n              <div className=\"flex flex-wrap gap-4 mt-3 text-sm text-muted-foreground\">\n                <div className=\"flex items-center space-x-1\">\n                  <MapPin className=\"h-4 w-4\" />\n                  <span>San Francisco, CA</span>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <Calendar className=\"h-4 w-4\" />\n                  <span>Joined March 2022</span>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <LinkIcon className=\"h-4 w-4\" />\n                  <a href=\"#\" className=\"text-primary hover:underline\">alexjohnson.dev</a>\n                </div>\n              </div>\n              <div className=\"flex gap-6 mt-4 text-sm\">\n                <div>\n                  <span className=\"font-semibold\">1,234</span>\n                  <span className=\"text-muted-foreground ml-1\">Following</span>\n                </div>\n                <div>\n                  <span className=\"font-semibold\">5,678</span>\n                  <span className=\"text-muted-foreground ml-1\">Followers</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setIsFollowing(!isFollowing)}\n                className={`px-6 py-2 rounded-lg font-medium transition-colors ${\n                  isFollowing\n                    ? 'bg-muted text-muted-foreground hover:bg-muted/80'\n                    : 'bg-primary text-primary-foreground hover:bg-primary/90'\n                }`}\n              >\n                {isFollowing ? (\n                  <>\n                    <Users className=\"h-4 w-4 inline mr-2\" />\n                    Following\n                  </>\n                ) : (\n                  <>\n                    <UserPlus className=\"h-4 w-4 inline mr-2\" />\n                    Follow\n                  </>\n                )}\n              </button>\n              <button className=\"px-6 py-2 bg-muted text-muted-foreground rounded-lg hover:bg-muted/80 transition-colors\">\n                Message\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"mt-8 px-4\">\n          <div className=\"border-b\">\n            <nav className=\"flex space-x-8\">\n              {['posts', 'photos', 'about'].map((tab) => (\n                <button\n                  key={tab}\n                  onClick={() => setActiveTab(tab)}\n                  className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                    activeTab === tab\n                      ? 'border-primary text-primary'\n                      : 'border-transparent text-muted-foreground hover:text-foreground'\n                  }`}\n                >\n                  {tab.charAt(0).toUpperCase() + tab.slice(1)}\n                </button>\n              ))}\n            </nav>\n          </div>\n        </div>\n\n        {/* Tab Content */}\n        <div className=\"mt-6 px-4 pb-8\">\n          {activeTab === 'posts' && (\n            <div className=\"space-y-6\">\n              {userPosts.map((post) => (\n                <div key={post.id} className=\"bg-card rounded-lg border\">\n                  <div className=\"p-4 flex items-start space-x-3\">\n                    <div className=\"text-2xl\">😊</div>\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center space-x-2\">\n                        <h3 className=\"font-semibold\">Alex Johnson</h3>\n                        <span className=\"text-muted-foreground text-sm\">•</span>\n                        <span className=\"text-muted-foreground text-sm\">{post.time}</span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"px-4 pb-3\">\n                    <p className=\"text-foreground\">{post.content}</p>\n                    {post.image && (\n                      <div className=\"mt-3 text-6xl text-center py-8 bg-muted rounded-lg\">\n                        {post.image}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"px-4 py-3 border-t flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-6\">\n                      <button className=\"flex items-center space-x-2 text-muted-foreground hover:text-red-500 transition-colors\">\n                        <Heart className=\"h-5 w-5\" />\n                        <span className=\"text-sm\">{post.likes}</span>\n                      </button>\n                      <button className=\"flex items-center space-x-2 text-muted-foreground hover:text-primary transition-colors\">\n                        <MessageCircle className=\"h-5 w-5\" />\n                        <span className=\"text-sm\">{post.comments}</span>\n                      </button>\n                      <button className=\"flex items-center space-x-2 text-muted-foreground hover:text-primary transition-colors\">\n                        <Share2 className=\"h-5 w-5\" />\n                        <span className=\"text-sm\">Share</span>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'photos' && (\n            <div className=\"grid grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-2\">\n              {photos.map((photo, index) => (\n                <div\n                  key={index}\n                  className=\"aspect-square bg-muted rounded-lg flex items-center justify-center text-4xl hover:bg-muted/80 cursor-pointer transition-colors\"\n                >\n                  {photo}\n                </div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'about' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-card rounded-lg border p-6\">\n                <h3 className=\"font-semibold mb-4\">About Alex</h3>\n                <div className=\"space-y-4\">\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Bio</h4>\n                    <p className=\"text-muted-foreground\">\n                      Full-stack developer with 5+ years of experience building web applications. \n                      Passionate about clean code, user experience, and continuous learning. When not coding, \n                      you can find me hiking trails or exploring new coffee shops!\n                    </p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Work</h4>\n                    <p className=\"text-muted-foreground\">Senior Developer at TechCorp</p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Education</h4>\n                    <p className=\"text-muted-foreground\">Computer Science, UC Berkeley</p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Interests</h4>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {['Web Development', 'Hiking', 'Photography', 'Reading', 'Coffee'].map((interest) => (\n                        <span key={interest} className=\"px-3 py-1 bg-muted rounded-full text-sm\">\n                          {interest}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState",
          "useState"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1757791368070": {
      "phoenixId": "phoenix-1757791368070",
      "componentName": "SearchPage",
      "filePath": "src/app/search/page.tsx",
      "lineNumber": 8,
      "columnNumber": 15,
      "sourceCode": "export default function SearchPage() {\n  const [searchQuery, setSearchQuery] = useState('')\n  const [activeTab, setActiveTab] = useState('all')\n  const [searchResults, setSearchResults] = useState({\n    users: [],\n    posts: [],\n    hashtags: []\n  })\n\n  // Mock data for search results\n  const allUsers = [\n    { id: 1, name: 'Sarah Chen', username: '@sarahc', avatar: '👩‍💻', bio: 'Frontend Developer | React Enthusiast', followers: 1248, following: 892, verified: true },\n    { id: 2, name: 'Mike Johnson', username: '@mikej', avatar: '👨‍🎨', bio: 'Travel Photographer | Nature Lover', followers: 3567, following: 1234, verified: false },\n    { id: 3, name: 'Alex Rivera', username: '@alexr', avatar: '👨‍💼', bio: 'Product Manager | Startup Founder', followers: 2156, following: 654, verified: true },\n    { id: 4, name: 'Emma Wilson', username: '@emmaw', avatar: '👩‍🎓', bio: 'PhD Student | AI Researcher', followers: 987, following: 543, verified: false },\n    { id: 5, name: 'David Kim', username: '@davidk', avatar: '👨‍🔬', bio: 'Data Scientist | ML Engineer', followers: 1876, following: 432, verified: true }\n  ]\n\n  const allPosts = [\n    { \n      id: 1, \n      author: 'Sarah Chen', \n      avatar: '👩‍💻', \n      content: 'Just launched my new portfolio website! So excited to share my work with the world. #webdev #portfolio',\n      likes: 245,\n      comments: 28,\n      time: '2h ago'\n    },\n    { \n      id: 2, \n      author: 'Mike Johnson', \n      avatar: '👨‍🎨', \n      content: 'Beautiful sunset from my hiking trip this weekend. Nature never ceases to amaze me! #photography #nature #hiking',\n      likes: 1567,\n      comments: 89,\n      time: '4h ago'\n    },\n    { \n      id: 3, \n      author: 'Alex Rivera', \n      avatar: '👨‍💼', \n      content: 'Team meeting went great today! We are making amazing progress on our new project. #startup #teamwork',\n      likes: 432,\n      comments: 67,\n      time: '6h ago'\n    }\n  ]\n\n  const allHashtags = [\n    { tag: 'webdev', posts: 15234 },\n    { tag: 'photography', posts: 28567 },\n    { tag: 'travel', posts: 19876 },\n    { tag: 'tech', posts: 34567 },\n    { tag: 'nature', posts: 12345 },\n    { tag: 'startup', posts: 8976 },\n    { tag: 'portfolio', posts: 5432 },\n    { tag: 'hiking', posts: 7654 }\n  ]\n\n  useEffect(() => {\n    if (searchQuery.trim()) {\n      // Filter users\n      const filteredUsers = allUsers.filter(user => \n        user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        user.username.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        user.bio.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n\n      // Filter posts\n      const filteredPosts = allPosts.filter(post =>\n        post.content.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        post.author.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n\n      // Filter hashtags\n      const filteredHashtags = allHashtags.filter(hashtag =>\n        hashtag.tag.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n\n      setSearchResults({\n        users: filteredUsers,\n        posts: filteredPosts,\n        hashtags: filteredHashtags\n      })\n    } else {\n      setSearchResults({ users: [], posts: [], hashtags: [] })\n    }\n  }, [searchQuery])\n\n  const getFilteredResults = () => {\n    switch (activeTab) {\n      case 'users': return { users: searchResults.users, posts: [], hashtags: [] }\n      case 'posts': return { users: [], posts: searchResults.posts, hashtags: [] }\n      case 'hashtags': return { users: [], posts: [], hashtags: searchResults.hashtags }\n      default: return searchResults\n    }\n  }\n\n  const filteredResults = getFilteredResults()\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"sticky top-0 z-50 border-b bg-card/95 backdrop-blur supports-[backdrop-filter]:bg-card/60\">\n        <div className=\"container flex h-16 items-center px-4\">\n          <div className=\"flex items-center space-x-4 flex-1\">\n            <Link href=\"/\">\n              <ArrowLeft className=\"h-6 w-6 text-muted-foreground hover:text-primary cursor-pointer\" />\n            </Link>\n            <div className=\"relative flex-1 max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\n              <input\n                type=\"search\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                placeholder=\"Search Ronim...\"\n                className=\"w-full pl-10 pr-4 py-2 bg-muted rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-primary\"\n                autoFocus\n              />\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <Image src=\"/generated/ronim-logo.png\" alt=\"Ronim Logo\" width={120} height={40} className=\"h-8 w-auto\" />\n          </div>\n        </div>\n      </header>\n\n      <div className=\"container max-w-4xl mx-auto py-6 px-4\">\n        {/* Search Tabs */}\n        {searchQuery && (\n          <div className=\"flex space-x-4 mb-6 border-b\">\n            {[\n              { id: 'all', label: 'All', count: searchResults.users.length + searchResults.posts.length + searchResults.hashtags.length },\n              { id: 'users', label: 'People', count: searchResults.users.length },\n              { id: 'posts', label: 'Posts', count: searchResults.posts.length },\n              { id: 'hashtags', label: 'Tags', count: searchResults.hashtags.length }\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`pb-4 px-1 border-b-2 transition-colors ${\n                  activeTab === tab.id\n                    ? 'border-primary text-primary'\n                    : 'border-transparent text-muted-foreground hover:text-foreground'\n                }`}\n              >\n                <span className=\"font-medium\">{tab.label}</span>\n                {tab.count > 0 && (\n                  <span className=\"ml-2 bg-muted text-muted-foreground text-xs rounded-full px-2 py-1\">\n                    {tab.count}\n                  </span>\n                )}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {/* Search Results */}\n        {!searchQuery ? (\n          <div className=\"text-center py-12\">\n            <div className=\"text-6xl mb-4\">🔍</div>\n            <h2 className=\"text-2xl font-semibold mb-2\">Search Ronim</h2>\n            <p className=\"text-muted-foreground\">Find people, posts, and hashtags</p>\n            \n            <div className=\"mt-8\">\n              <h3 className=\"text-lg font-semibold mb-4\">Trending</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                {allHashtags.slice(0, 8).map((hashtag) => (\n                  <button\n                    key={hashtag.tag}\n                    onClick={() => setSearchQuery(`#${hashtag.tag}`)}\n                    className=\"p-3 bg-muted rounded-lg hover:bg-muted/80 transition-colors text-left\"\n                  >\n                    <div className=\"flex items-center space-x-2 mb-1\">\n                      <Hash className=\"h-4 w-4 text-primary\" />\n                      <span className=\"font-medium\">#{hashtag.tag}</span>\n                    </div>\n                    <p className=\"text-xs text-muted-foreground\">{hashtag.posts.toLocaleString()} posts</p>\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            {/* Users Results */}\n            {filteredResults.users.length > 0 && (\n              <div>\n                <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                  <Users className=\"h-5 w-5 mr-2\" />\n                  People\n                </h3>\n                <div className=\"space-y-3\">\n                  {filteredResults.users.map((user) => (\n                    <div key={user.id} className=\"flex items-center space-x-4 p-4 bg-card rounded-lg border hover:bg-muted/50 transition-colors\">\n                      <div className=\"text-3xl\">{user.avatar}</div>\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center space-x-2\">\n                          <h4 className=\"font-semibold truncate\">{user.name}</h4>\n                          {user.verified && <span className=\"text-blue-500\">✓</span>}\n                        </div>\n                        <p className=\"text-sm text-muted-foreground\">{user.username}</p>\n                        <p className=\"text-sm text-muted-foreground mt-1 line-clamp-1\">{user.bio}</p>\n                        <div className=\"flex items-center space-x-4 text-xs text-muted-foreground mt-1\">\n                          <span>{user.followers.toLocaleString()} followers</span>\n                          <span>{user.following.toLocaleString()} following</span>\n                        </div>\n                      </div>\n                      <button className=\"px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors text-sm\">\n                        <UserPlus className=\"h-4 w-4 mr-1 inline\" />\n                        Follow\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Posts Results */}\n            {filteredResults.posts.length > 0 && (\n              <div>\n                <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                  <MessageCircle className=\"h-5 w-5 mr-2\" />\n                  Posts\n                </h3>\n                <div className=\"space-y-4\">\n                  {filteredResults.posts.map((post) => (\n                    <div key={post.id} className=\"bg-card rounded-lg border\">\n                      <div className=\"p-4 flex items-start space-x-3\">\n                        <div className=\"text-2xl\">{post.avatar}</div>\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2\">\n                            <h4 className=\"font-semibold\">{post.author}</h4>\n                            <span className=\"text-muted-foreground text-sm\">•</span>\n                            <span className=\"text-muted-foreground text-sm\">{post.time}</span>\n                          </div>\n                          <p className=\"text-foreground mt-2\">{post.content}</p>\n                        </div>\n                      </div>\n                      <div className=\"px-4 py-3 border-t flex items-center space-x-6\">\n                        <button className=\"flex items-center space-x-2 text-muted-foreground hover:text-red-500 transition-colors\">\n                          <Heart className=\"h-4 w-4\" />\n                          <span className=\"text-sm\">{post.likes}</span>\n                        </button>\n                        <button className=\"flex items-center space-x-2 text-muted-foreground hover:text-primary transition-colors\">\n                          <MessageCircle className=\"h-4 w-4\" />\n                          <span className=\"text-sm\">{post.comments}</span>\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Hashtags Results */}\n            {filteredResults.hashtags.length > 0 && (\n              <div>\n                <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                  <Hash className=\"h-5 w-5 mr-2\" />\n                  Hashtags\n                </h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {filteredResults.hashtags.map((hashtag) => (\n                    <button\n                      key={hashtag.tag}\n                      className=\"p-4 bg-card rounded-lg border hover:bg-muted/50 transition-colors text-left\"\n                    >\n                      <div className=\"flex items-center space-x-2 mb-2\">\n                        <Hash className=\"h-5 w-5 text-primary\" />\n                        <span className=\"font-semibold text-lg\">#{hashtag.tag}</span>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">{hashtag.posts.toLocaleString()} posts</p>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* No Results */}\n            {filteredResults.users.length === 0 && filteredResults.posts.length === 0 && filteredResults.hashtags.length === 0 && (\n              <div className=\"text-center py-12\">\n                <div className=\"text-6xl mb-4\">🤷‍♂️</div>\n                <h3 className=\"text-lg font-semibold mb-2\">No results found</h3>\n                <p className=\"text-muted-foreground\">\n                  Try searching for something else or check your spelling\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management",
        "side-effects",
        "lifecycle-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState",
          "useState",
          "useState",
          "useEffect"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1757791368071": {
      "phoenixId": "phoenix-1757791368071",
      "componentName": "Settings",
      "filePath": "src/app/settings/page.tsx",
      "lineNumber": 8,
      "columnNumber": 15,
      "sourceCode": "export default function Settings() {\n  const [activeSection, setActiveSection] = useState('account')\n  const [showPassword, setShowPassword] = useState(false)\n  const [settings, setSettings] = useState({\n    // Account Settings\n    name: 'John Doe',\n    email: 'john.doe@example.com',\n    bio: 'Software developer passionate about creating amazing user experiences.',\n    location: 'San Francisco, CA',\n    \n    // Privacy Settings\n    profileVisibility: 'public',\n    postVisibility: 'friends',\n    allowMessages: 'everyone',\n    allowTags: 'friends',\n    \n    // Notification Settings\n    likeNotifications: true,\n    commentNotifications: true,\n    friendRequestNotifications: true,\n    messageNotifications: true,\n    emailNotifications: false,\n    \n    // Appearance Settings\n    theme: 'system',\n    fontSize: 'medium',\n    language: 'en'\n  })\n\n  const handleSettingChange = (key, value) => {\n    setSettings({ ...settings, [key]: value })\n  }\n\n  const settingSections = [\n    { id: 'account', label: 'Account', icon: User },\n    { id: 'privacy', label: 'Privacy', icon: Shield },\n    { id: 'notifications', label: 'Notifications', icon: Bell },\n    { id: 'appearance', label: 'Appearance', icon: Palette },\n    { id: 'language', label: 'Language', icon: Globe },\n    { id: 'security', label: 'Security', icon: Lock },\n    { id: 'help', label: 'Help', icon: HelpCircle }\n  ]\n\n  const renderAccountSettings = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-semibold mb-4\">Profile Information</h3>\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center space-x-4 mb-6\">\n            <div className=\"text-6xl\">😊</div>\n            <div>\n              <button className=\"px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors text-sm\">\n                Change Avatar\n              </button>\n              <p className=\"text-xs text-muted-foreground mt-1\">JPG, PNG max 2MB</p>\n            </div>\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Full Name</label>\n            <input\n              type=\"text\"\n              value={settings.name}\n              onChange={(e) => handleSettingChange('name', e.target.value)}\n              className=\"w-full px-4 py-2 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Email</label>\n            <input\n              type=\"email\"\n              value={settings.email}\n              onChange={(e) => handleSettingChange('email', e.target.value)}\n              className=\"w-full px-4 py-2 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Bio</label>\n            <textarea\n              value={settings.bio}\n              onChange={(e) => handleSettingChange('bio', e.target.value)}\n              className=\"w-full px-4 py-2 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\"\n              rows={3}\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Location</label>\n            <input\n              type=\"text\"\n              value={settings.location}\n              onChange={(e) => handleSettingChange('location', e.target.value)}\n              className=\"w-full px-4 py-2 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\"\n              placeholder=\"City, Country\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  const renderPrivacySettings = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-semibold mb-4\">Privacy Controls</h3>\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Profile Visibility</label>\n            <select\n              value={settings.profileVisibility}\n              onChange={(e) => handleSettingChange('profileVisibility', e.target.value)}\n              className=\"w-full px-4 py-2 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\"\n            >\n              <option value=\"public\">Public</option>\n              <option value=\"friends\">Friends Only</option>\n              <option value=\"private\">Private</option>\n            </select>\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Who can see your posts?</label>\n            <select\n              value={settings.postVisibility}\n              onChange={(e) => handleSettingChange('postVisibility', e.target.value)}\n              className=\"w-full px-4 py-2 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\"\n            >\n              <option value=\"public\">Everyone</option>\n              <option value=\"friends\">Friends Only</option>\n              <option value=\"custom\">Custom</option>\n            </select>\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Who can message you?</label>\n            <select\n              value={settings.allowMessages}\n              onChange={(e) => handleSettingChange('allowMessages', e.target.value)}\n              className=\"w-full px-4 py-2 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\"\n            >\n              <option value=\"everyone\">Everyone</option>\n              <option value=\"friends\">Friends Only</option>\n              <option value=\"nobody\">Nobody</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  const renderNotificationSettings = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-semibold mb-4\">Notification Preferences</h3>\n        <div className=\"space-y-4\">\n          {[\n            { key: 'likeNotifications', label: 'Like notifications', description: 'Get notified when someone likes your posts' },\n            { key: 'commentNotifications', label: 'Comment notifications', description: 'Get notified when someone comments on your posts' },\n            { key: 'friendRequestNotifications', label: 'Friend request notifications', description: 'Get notified about new friend requests' },\n            { key: 'messageNotifications', label: 'Message notifications', description: 'Get notified about new messages' },\n            { key: 'emailNotifications', label: 'Email notifications', description: 'Receive notifications via email' }\n          ].map((notification) => (\n            <div key={notification.key} className=\"flex items-center justify-between p-3 bg-muted/30 rounded-lg\">\n              <div>\n                <p className=\"font-medium\">{notification.label}</p>\n                <p className=\"text-sm text-muted-foreground\">{notification.description}</p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={settings[notification.key]}\n                  onChange={(e) => handleSettingChange(notification.key, e.target.checked)}\n                  className=\"sr-only peer\"\n                />\n                <div className=\"relative w-11 h-6 bg-muted peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary/25 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary\"></div>\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n\n  const renderAppearanceSettings = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-semibold mb-4\">Appearance</h3>\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Theme</label>\n            <div className=\"grid grid-cols-3 gap-2\">\n              {['light', 'dark', 'system'].map((theme) => (\n                <button\n                  key={theme}\n                  onClick={() => handleSettingChange('theme', theme)}\n                  className={`p-3 rounded-lg border text-center capitalize ${\n                    settings.theme === theme\n                      ? 'border-primary bg-primary/10 text-primary'\n                      : 'border-border bg-muted hover:bg-muted/80'\n                  }`}\n                >\n                  {theme}\n                </button>\n              ))}\n            </div>\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Font Size</label>\n            <select\n              value={settings.fontSize}\n              onChange={(e) => handleSettingChange('fontSize', e.target.value)}\n              className=\"w-full px-4 py-2 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\"\n            >\n              <option value=\"small\">Small</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"large\">Large</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  const renderSecuritySettings = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-semibold mb-4\">Password & Security</h3>\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Change Password</label>\n            <div className=\"space-y-3\">\n              <input\n                type=\"password\"\n                placeholder=\"Current password\"\n                className=\"w-full px-4 py-2 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\"\n              />\n              <div className=\"relative\">\n                <input\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"New password\"\n                  className=\"w-full px-4 py-2 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary pr-12\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground hover:text-foreground\"\n                >\n                  {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                </button>\n              </div>\n              <input\n                type=\"password\"\n                placeholder=\"Confirm new password\"\n                className=\"w-full px-4 py-2 bg-muted border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\"\n              />\n              <button className=\"px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors\">\n                Update Password\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"border-t pt-4\">\n            <h4 className=\"font-medium mb-2\">Two-Factor Authentication</h4>\n            <p className=\"text-sm text-muted-foreground mb-3\">Add an extra layer of security to your account</p>\n            <button className=\"px-4 py-2 bg-muted text-foreground rounded-lg hover:bg-muted/80 transition-colors\">\n              Enable 2FA\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  const renderContent = () => {\n    switch (activeSection) {\n      case 'account': return renderAccountSettings()\n      case 'privacy': return renderPrivacySettings()\n      case 'notifications': return renderNotificationSettings()\n      case 'appearance': return renderAppearanceSettings()\n      case 'security': return renderSecuritySettings()\n      case 'help':\n        return (\n          <div className=\"text-center py-12\">\n            <HelpCircle className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n            <h3 className=\"text-lg font-semibold mb-2\">Help & Support</h3>\n            <p className=\"text-muted-foreground\">Contact our support team for assistance</p>\n            <button className=\"mt-4 px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors\">\n              Contact Support\n            </button>\n          </div>\n        )\n      default: return null\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"sticky top-0 z-50 border-b bg-card/95 backdrop-blur supports-[backdrop-filter]:bg-card/60\">\n        <div className=\"container flex h-16 items-center px-4\">\n          <div className=\"flex items-center space-x-4\">\n            <Link href=\"/profile\">\n              <ArrowLeft className=\"h-6 w-6 text-muted-foreground hover:text-primary cursor-pointer\" />\n            </Link>\n            <div className=\"flex items-center space-x-2\">\n              <Image src=\"/generated/ronim-logo.png\" alt=\"Ronim Logo\" width={120} height={40} className=\"h-8 w-auto\" />\n            </div>\n          </div>\n          <div className=\"flex-1 text-center\">\n            <h1 className=\"text-xl font-semibold\">Settings</h1>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"container max-w-6xl mx-auto py-6 px-4\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Settings Navigation */}\n          <div className=\"lg:col-span-1\">\n            <nav className=\"space-y-1\">\n              {settingSections.map((section) => {\n                const Icon = section.icon\n                return (\n                  <button\n                    key={section.id}\n                    onClick={() => setActiveSection(section.id)}\n                    className={`w-full flex items-center space-x-3 px-3 py-2 rounded-lg text-left transition-colors ${\n                      activeSection === section.id\n                        ? 'bg-primary text-primary-foreground'\n                        : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n                    }`}\n                  >\n                    <Icon className=\"h-5 w-5\" />\n                    <span>{section.label}</span>\n                  </button>\n                )\n              })}\n              \n              <div className=\"border-t pt-4\">\n                <button className=\"w-full flex items-center space-x-3 px-3 py-2 rounded-lg text-left text-red-500 hover:text-red-700 hover:bg-red-50\">\n                  <LogOut className=\"h-5 w-5\" />\n                  <span>Log Out</span>\n                </button>\n              </div>\n            </nav>\n          </div>\n\n          {/* Settings Content */}\n          <div className=\"lg:col-span-3\">\n            <div className=\"bg-card rounded-lg border p-6\">\n              {renderContent()}\n            </div>\n            \n            {activeSection !== 'help' && (\n              <div className=\"mt-6 flex justify-end space-x-2\">\n                <button className=\"px-4 py-2 text-muted-foreground hover:text-foreground transition-colors\">\n                  Cancel\n                </button>\n                <button className=\"px-6 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors\">\n                  Save Changes\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState",
          "useState",
          "useState"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1757791368072": {
      "phoenixId": "phoenix-1757791368072",
      "componentName": "QueryProvider",
      "filePath": "src/components/query-provider.tsx",
      "lineNumber": 6,
      "columnNumber": 7,
      "sourceCode": "export function QueryProvider({ children }: { children: React.ReactNode }) {\n  const [queryClient] = useState(() => new QueryClient())\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  )\n}",
      "props": [
        {
          "name": "children",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "state-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState"
        ],
        "complexity": "moderate"
      }
    },
    "phoenix-1757791368073": {
      "phoenixId": "phoenix-1757791368073",
      "componentName": "ThemeProvider",
      "filePath": "src/components/theme-provider.tsx",
      "lineNumber": 6,
      "columnNumber": 7,
      "sourceCode": "export function ThemeProvider({\n  children,\n  ...props\n}: React.ComponentProps<typeof NextThemesProvider>) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}",
      "props": [
        {
          "name": "children",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "simple"
      }
    },
    "phoenix-1757791368074": {
      "phoenixId": "phoenix-1757791368074",
      "componentName": "Badge",
      "filePath": "src/components/ui/badge.tsx",
      "lineNumber": 30,
      "columnNumber": 0,
      "sourceCode": "function Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}",
      "props": [
        {
          "name": "className",
          "type": "unknown",
          "required": false
        },
        {
          "name": "variant",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "moderate"
      }
    },
    "phoenix-1757791368075": {
      "phoenixId": "phoenix-1757791368075",
      "componentName": "Calendar",
      "filePath": "src/components/ui/calendar.tsx",
      "lineNumber": 10,
      "columnNumber": 0,
      "sourceCode": "function Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        Chevron: (props) => props.orientation === 'left' ? <ChevronLeft className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  );\n}",
      "props": [
        {
          "name": "className",
          "type": "unknown",
          "required": false
        },
        {
          "name": "classNames",
          "type": "unknown",
          "required": false
        },
        {
          "name": "showOutsideDays",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "complex"
      }
    },
    "phoenix-1757791368076": {
      "phoenixId": "phoenix-1757791368076",
      "componentName": "Skeleton",
      "filePath": "src/components/ui/skeleton.tsx",
      "lineNumber": 3,
      "columnNumber": 0,
      "sourceCode": "function Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}",
      "props": [
        {
          "name": "className",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "simple"
      }
    },
    "phoenix-1757791368077": {
      "phoenixId": "phoenix-1757791368077",
      "componentName": "Toaster",
      "filePath": "src/components/ui/toaster.tsx",
      "lineNumber": 13,
      "columnNumber": 7,
      "sourceCode": "export function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useToast"
        ],
        "complexity": "moderate"
      }
    }
  },
  "stats": {
    "totalComponents": 19,
    "totalFiles": 69,
    "processingTimeMs": 555
  }
}
